#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 9.4.4 (28 May 2019) -- redhat Enterprise release
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#
# Copyright (C) 2000-2017 Kern Sibbald
# License: BSD 2-Clause; see file LICENSE-FOSS
#

Director {                            # define myself
  Name = bacula-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/opt/bacula/scripts/query.sql"
  WorkingDirectory = "/opt/bacula/working"
  PidDirectory = "/opt/bacula/working"
  Maximum Concurrent Jobs = 20
  Password = "75rfxeAId8Hxtmtm9Mn7EC/Bvr9Ykol+lylKPz7sF68Q"         # Console password
  Messages = Daemon
  StatisticsRetention = 5y
}

# Restricted console used by tray-monitor to get the status of the director
Console {
  Name = bacula-mon
  Password = "UCyA6l1ABzL2osyuKyCNGNGPl2HQT/Fat+P3pZcfsKlP"
  CommandACL = status, .status
}

JobDefs {
  Name = "JD-storage13"
  Type = "Backup"
  FileSet = "FS-full"
  Messages = "Standard"
  SpoolAttributes = "yes"
  Priority = "10"
  Accurate = "yes"
}

JobDefs {
  Name = "JD-storage12"
  Type = "Backup"
  FileSet = "FS-full"
  Schedule = "WeeklyCycle"
  Messages = "Standard"
  SpoolAttributes = "yes"
  Priority = "10" 
  Accurate = "yes"
}

JobDefs {
  Name = "JD-storage11"
  Type = "Backup"
  FileSet = "FS-full"
  Schedule = "WeeklyCycle"
  Messages = "Standard"
  SpoolAttributes = "yes"
  Priority = "10"
  Accurate = "yes"
}

# Define the main nightly save backup job
#   By default, this job will back up to disk in /tmp
Job {
  JobDefs = "JD-storage13"
  Name = "baculac-fdF"
  Schedule = "WeeklyCycle"
  Enabled = "yes"
  Client = "baculac-fd"
  Pool = "Default"
  FullBackupPool = "Pool-00-File11"
  DifferentialBackupPool = "Pool-01-File11"
  IncrementalBackupPool = "Pool-02-File11"
  Storage = AC-File11
}

Job {
  JobDefs = "JD-storage12"
  Name = "baculac-fdD"
  Schedule = "WeeklyCycle"
  Enabled = "yes"
  Client = "baculac-fd"
  Pool = "Default"
  FullBackupPool = "Pool-00-File11"
  DifferentialBackupPool = "Pool-01-File11"
  IncrementalBackupPool = "Pool-02-File11"
  Storage = "AC-FileGr1-Dev1" 
}

Job {
  JobDefs = "JD-storage11"
  Name = "baculac-fdI"
  Schedule = "WeeklyCycle"
  Enabled = "yes"
  Client = "baculac-fd"
  Pool = "Default"
  FullBackupPool = "Pool-00-File11"
  DifferentialBackupPool = "Pool-01-File11"
  IncrementalBackupPool = "Pool-02-File11"
  Storage = "AC-FileGr1-Dev1" 
}

Job {
  JobDefs = "JD-storage13"
  Name = "BackupCatalog"
  Client = "bacula-dir"
  FileSet = "Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  Pool = "Default"
  FullBackupPool = "Pool-00-File11"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/opt/bacula/scripts/make_catalog_backup.pl MyCatalog bacula 1"
  # This deletes the copy of the catalog
  RunAfterJob  = "/opt/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/opt/bacula/working/%c_%n.bsr"
  Priority = 11                   # run after main backup
}

Job {
  Name = "bacula-dirVerify"
  Type = "Verify"
  Client = "bacula-dirVerify"
  FileSet = "FS-Verify"
  Messages = "Standard"
  Pool = "Default"
  FullBackupPool = "Pool-00-File11"
  Schedule = "VerifyCycle"
}

# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
Job {
  Name = "RestoreFiles"
  Type = "Restore"
  Client = "baculac-fd"
  FileSet = "FS-full"     # The FileSet directives are not used by Restore Jobs, but must not be removed
  Pool = "Default"        # The FileSet directives are not used by Restore Jobs, but must not be removed
  Messages = "Standard"
  Where = "/tmp/bacula-restores"
}

# List of files to be backed up
# df -l | grep "^/dev/sd[ab]" | grep -v ".*/tmp" | awk '{print $6}'
FileSet {
  Name = "FS-full"
  Include {
    Options {
      signature = "MD5"
      compression = "GZIP"
    }
    File = "/etc"
    File = "/boot"
  }
  Exclude {
    File = "/opt/bacula/working"
    File = "/tmp"
    File = "/proc"
    File = "/tmp"
    File = "/sys"
    File = "/.journal"
    File = "/.fsck"
  }
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = "MD5"
      compression = "GZIP"
    }
    File = "/opt/bacula/working/%c_%n.bsr"
  }
  Exclude {
  }
}

FileSet {
  Name = "FS-Verify"
  Include {
    Options {
      verify = "pins1"
      signature = "SHA1"
    }
    File = "/boot"
    File = "/bin"
    File = "/sbin"
    File = "/usr/bin"
    File = "/lib"
    File = "/root/.ssh"
    File = "/home/kern/.ssh"
    File = "/var/named"
    File = "/etc/sysconfig"
    File = "/etc/ssh"
    File = "/etc/security"
    File = "/etc/exports"
    File = "/etc/rc.d/init.d"
    File = "/etc/sendmail.cf"
    File = "/etc/sysctl.conf"
    File = "/etc/services"
    File = "/etc/xinetd.d"
    File = "/etc/hosts.allow"
    File = "/etc/hosts.deny"
    File = "/etc/hosts"
    File = "/etc/modules.conf"
    File = "/etc/named.conf"
    File = "/etc/pam.d"
    File = "/etc/resolv.conf"
  }
  Exclude { 
  }
}

# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Level = Full 1st sun at 14:20
  Run = Level = Differential 2nd-5th sun at 14:20
  Run = Level = Incremental mon-sat at 14:20
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Level = Full sun-sat at 14:25
}

Schedule {
Name = "VerifyCycle"
Run = Level = Catalog sun-sat at 21:05
}

# Client (File Services) to backup
Client {
  Name = "baculac-fd"
  Address = "192.168.56.58"
  FDPort = "9102"
  Catalog = "MyCatalog"
  Password = "0il/RiL+dpjxD8tigziSEF4u3eH9tiU7uDbEruUzAcSF"          # password for FileDaemon
  File Retention = 60 days            # 60 days
  Job Retention = 6 months            # six months
  AutoPrune = "yes"                     # Prune expired Jobs/Files
}

Client {
  Name = "bacula-dir"
  Address = "192.168.56.57"
  FDPort = "9102"
  Catalog = "MyCatalog"
  Password = "0il/RiL+dpjxD8tigziSEF4u3eH9tiU7uDbEruUzAcSF"          # password for FileDaemon
  File Retention = 60 days            # 60 days
  Job Retention = 6 months            # six months
  AutoPrune = "yes"                     # Prune expired Jobs/Files
}

Client {
  Name = "bacula-dirVerify"
  Address = "192.168.56.57"
  Catalog = "bacula-dirCatalog"
  Password = "0il/RiL+dpjxD8tigziSEF4u3eH9tiU7uDbEruUzAcSF"
  File Retention = 80d
  Job Retention = 1y
  AutoPrune = "yes"
}

# Generic catalog service
Catalog {
  Name = "MyCatalog"
  dbname = "bacula"; dbuser = "bacula"; dbpassword = "1"
}

Catalog {
  Name = "bacula-dirCatalog"
  dbname = "bacula"; dbuser = "bacula"; dbpassword = "1"
}

# Definition of file Virtual Autochanger device
Autochanger {
  Name = "AC-File11"
  Address = "192.168.56.57"
  SDPort = "9103"
  Password = "tgw7QKL+Tc/4rts0PCt+keic7sF6F1BrjYpO2fmj962z"
  Device = "AC-FileGr1"
  Media Type = "File11"
  Maximum Concurrent Jobs = "10"
}

Storage {
  Name = "AC-FileGr1-Dev1"
  Address = "192.168.56.57"
  SDPort = "9103"
  Password = "tgw7QKL+Tc/4rts0PCt+keic7sF6F1BrjYpO2fmj962z"
  Device = "AC-FileGr1-Dev1"
  Media Type = "File11"
  Maximum Concurrent Jobs = "5"
  Autochanger = "AC-File11"
}

Pool {
  Name = "Default"
  Pool Type = "Backup"
}

Pool {
  Name = "Pool-00-File11"
  Pool Type = "Backup"
  Label Format = "Pool-00-File11_${Client}_${JobId}_${Year}-${Month:p/2/0/r}-${Day:p/2/0/r}T${Hour:p/2/0/r}.${Minute:p/2/0/r}.${Second:p/2/0/r}"
  Recycle = "yes"                       # Bacula can automatically recycle Volumes
  AutoPrune = "yes"                     # Prune expired volumes
  Volume Retention = 30 days         # one year
  Maximum Volume Bytes = 500M          # Limit Volume size to something reasonable
  Maximum Volumes = "10"               # Limit number of Volumes in Pool
  Storage = "AC-FileGr1-Dev1" 
}

Pool {
  Name = "Pool-01-File11"
  Pool Type = "Backup"
  Label Format = "Pool-01-File11_${Client}_${JobId}_${Year}-${Month:p/2/0/r}-${Day:p/2/0/r}T${Hour:p/2/0/r}.${Minute:p/2/0/r}.${Second:p/2/0/r}"
  Recycle = "yes"                       # Bacula can automatically recycle Volumes
  AutoPrune = "yes"                     # Prune expired volumes
  Volume Retention = 30 days         # one year
  Maximum Volume Bytes = 500M          # Limit Volume size to something reasonable
  Maximum Volumes = "10"               # Limit number of Volumes in Pool
  Storage = "AC-File11" 
}

Pool {
  Name = "Pool-02-File11"
  Pool Type = "Backup"
  Label Format = "Pool-02-File11_${Client}_${JobId}_${Year}-${Month:p/2/0/r}-${Day:p/2/0/r}T${Hour:p/2/0/r}.${Minute:p/2/0/r}.${Second:p/2/0/r}"
  Recycle = "yes"                       # Bacula can automatically recycle Volumes
  AutoPrune = "yes"                     # Prune expired volumes
  Volume Retention = 20 days         # one year
  Maximum Volume Bytes = 500M         # Limit Volume size to something reasonable
  Maximum Volumes = "10"               # Limit number of Volumes in Pool
  Storage = "AC-File11" 
}

# Scratch pool definition
Pool {
  Name = "Scratch"
  Pool Type = "Backup"
  Label Format = "Local-"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = "Standard"
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.
#
  mailcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root@localhost = all, !skipped
  operator = root@localhost = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/opt/bacula/log/bacula.log" = all, !skipped
  catalog = "all"
}

# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped
  console = all, !skipped, !saved
  append = "/opt/bacula/log/bacula.log" = all, !skipped
}

@|"find /etc/bacula/conf.d -name '*.conf' -type f -exec echo @{} \;"
